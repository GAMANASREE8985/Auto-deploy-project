name: CI
on:
  push:
    branches: [ main ]

env:
  NODE_VERSION: 18

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache backend node modules
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-node-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-node-

      - name: Backend - Install & Test
        working-directory: backend
        run: |
          npm ci
          npm test

      - name: Cache frontend node modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-node-

      - name: Frontend - Install & Test
        working-directory: frontend
        run: |
          npm ci
          npm test --watchAll=false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/auto-deploy-backend:${{ github.sha }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/auto-deploy-frontend:${{ github.sha }}

      - name: Install Trivy
        run: |
          curl -sSfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Trivy scan pushed backend image (CRITICAL,HIGH)
        run: |
          trivy image --severity CRITICAL,HIGH ${{ secrets.DOCKERHUB_USER }}/auto-deploy-backend:${{ github.sha }} || true

      - name: Trivy scan pushed frontend image (CRITICAL,HIGH)
        run: |
          trivy image --severity CRITICAL,HIGH ${{ secrets.DOCKERHUB_USER }}/auto-deploy-frontend:${{ github.sha }} || true

      - name: SonarQube Scan (placeholder)
        if: ${{ secrets.SONAR_TOKEN != '' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Run sonar scanner here - adapt to your Sonar setup"
          # Example: docker run --rm -e SONAR_HOST_URL=... -e SONAR_LOGIN=$SONAR_TOKEN -v "${{ github.workspace }}:/usr/src" sonarsource/sonar-scanner-cli
