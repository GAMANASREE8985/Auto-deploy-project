name: CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: 18
  
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache backend node modules
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-node-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-node-

      - name: Backend - Install & Test
        working-directory: ./backend
        run: |
          npm ci
          npm test

      - name: Cache frontend node modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-node-

      - name: Frontend - Install & Test
        working-directory: ./frontend
        run: |
          npm ci
          npm test --watchAll=false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USER }}/auto-deploy-backend:${{ github.sha }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USER }}/auto-deploy-frontend:${{ github.sha }}

      - name: Install Trivy
        run: |
          curl -sSfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Trivy scan pushed backend image (CRITICAL,HIGH)
        run: |
          trivy image --severity CRITICAL,HIGH ${{ env.DOCKERHUB_USER }}/auto-deploy-backend:${{ github.sha }} || true

      - name: Trivy scan pushed frontend image (CRITICAL,HIGH)
        run: |
          trivy image --severity CRITICAL,HIGH ${{ env.DOCKERHUB_USER }}/auto-deploy-frontend:${{ github.sha }} || true

      - name: SonarQube scan (placeholder)
        if: ${{ env.SONAR_TOKEN != '' }}
        run: |
          echo "Customize Sonar scanner here"
